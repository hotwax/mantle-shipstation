<?xml version="1.0" encoding="UTF-8"?>
<services xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          xsi:noNamespaceSchemaLocation="http://moqui.org/xsd/service-definition-2.1.xsd">
    <!--service for partial order part shipment-->
    <service verb="ship" noun="PartialOrder">
        <in-parameters>
            <parameter name="orderId" required="true"/>
            <parameter name="orderPartSeqId" required="true"/>
            <parameter name="orderItemList" type="List" required="true"/>
            <parameter name="shipDate" type="Timestamp" default="ec.user.nowTimestamp"/>
            <parameter name="carrier"/>
            <parameter name="trackingNo"/>
            <parameter name="labelCreateDate"/>
        </in-parameters>
        <out-parameters>
            <parameter name="shipmentId"/>
        </out-parameters>
        <actions>
            <entity-find-one entity-name="mantle.order.OrderHeader" value-field="orderHeader">
                <field-map field-name="orderId" from="orderId"/>
            </entity-find-one>

            <entity-find-one entity-name="mantle.order.OrderPart" value-field="orderPart">
                <field-map field-name="orderId" from="orderId"/>
                <field-map field-name="orderPartSeqId" from="orderPartSeqId"/>
            </entity-find-one>

            <if condition="!(orderPart.statusId in ['OrderApproved', 'OrderSent'] || orderHeader.statusId in ['OrderApproved', 'OrderSent'])">
                <return type="danger" message="Cannot create Shipment for Order Part in status ${orderPart.statusId}"/>
            </if>
            <!--<entity-find-related value-field="orderPart" relationship-name="mantle.order.OrderItem" list="orderItemList"
                                 order-by-list="['orderItemSeqId']"/>-->
            <if condition="!orderItemList.find({ it.product?.productTypeEnumId in ['PtAsset', 'PtDigitalAsset', 'PtAssetUse', 'PtPickAssembly'] })">
                <return type="warning"
                        message="Order ${orderId} part ${orderPartSeqId} has no shippable product items (type asset or asset use)"/>
            </if>
            <!--Creating Shipment-->
            <entity-find-one entity-name="mantle.party.PartyRole" value-field="carrierInfo">
                <field-map field-name="partyId" from="carrier"/>
                <field-map field-name="roleTypeId" value="Carrier"/>
            </entity-find-one>
            <!--If carrier is not found return error-->
            <if condition="carrierInfo==null">
                <return error="true" message="Invalid Carrier ${Carrier}"/>
            </if>

            <service-call name="mantle.shipment.ShipmentServices.create#Shipment" in-map="[shipmentTypeEnumId:'ShpTpSales',statusId:'ShipInput', entryDate:shipDate, priority:orderPart.priority,
                        fromPartyId:orderPart.vendorPartyId, toPartyId:orderPart.customerPartyId,productStoreId:orderHeader.productStoreId, costUomId:orderHeader.currencyUomId,carrierPartyId:orderPart.carrierPartyId,
                        shipmentMethodEnumId:orderPart.shipmentMethodEnumId,destPostalContactMechId:orderPart.postalContactMechId, destTelecomContactMechId:orderPart.telecomContactMechId]"
                          out-map="shipmentInfo"/>

            <!--creating Shipment Package-->
            <service-call name="mantle.shipment.ShipmentServices.create#ShipmentPackage"
                          in-map="[shipmentId:shipmentInfo.shipmentId]" out-map="shipmentPackageInfo"/>


            <entity-find entity-name="moqui.basic.EnumGroupMember" list="productItemTypeEgms" cache="true">
                <econdition field-name="enumGroupEnumId" value="EngItemsProduct"/>
            </entity-find>
            <set field="productItemTypes" from="productItemTypeEgms*.enumId"/>

            <iterate list="orderItemList" entry="orderItem">

                <!-- if no productId or not a product item type skip it -->
                <if condition="!orderItem.productId || !productItemTypes.contains(orderItem.itemTypeEnumId)">
                    <continue/>
                </if>

                <!-- see if Product is a physical item -->
                <entity-find-one entity-name="mantle.product.Product" value-field="product" cache="true">
                    <field-map field-name="productId" from="orderItem.productId"/>
                </entity-find-one>
                <if condition="!(product.productTypeEnumId in ['PtAsset', 'PtDigitalAsset', 'PtAssetUse', 'PtPickAssembly'])">
                    <continue/>
                </if>
                <!--creating Shipment Items-->
                <service-call name="mantle.shipment.ShipmentServices.create#ShipmentItem"
                              in-map="[shipmentId:shipmentInfo.shipmentId,productId:orderItem.productId,quantity:orderItem.quantity,statusId:'SisPending',orderId:orderItem.orderId,orderItemSeqId:orderItem.orderItemSeqId]"
                              out-map="shipmentItemSourceInfo"/>

                <!--Packing Shipment Items-->
                <if condition="orderItem.productId &amp;&amp; productItemTypes.contains(orderItem.itemTypeEnumId)">
                    <service-call name="mantle.shipment.ShipmentServices.pack#ShipmentProduct"
                                  in-map="[productId:orderItem.productId, quantity:orderItem.quantity, shipmentId:shipmentInfo.shipmentId,
                                shipmentPackageSeqId:shipmentPackageInfo.shipmentPackageSeqId]"/>
                </if>
            </iterate>
            <!--Updating tracking Code-->
            <service-call name="mantle.shipment.ShipmentServices.update#ShipmentPackageAndRouteSeg" in-map="[shipmentId:shipmentInfo.shipmentId,shipmentPackageSeqId:shipmentPackageInfo.shipmentPackageSeqId,
                                    shipmentRouteSegmentSeqId:shipmentInfo.shipmentRouteSegmentSeqId,trackingCode:trackingNo,labelDate:labelCreateDate]"/>

            <!--Packing Shipment-->
            <service-call name="mantle.shipment.ShipmentServices.pack#Shipment"
                          in-map="[shipmentId:shipmentInfo.shipmentId, packedDate:shipDate]"/>

            <!-- NOTE: check order completed is done as items are packed, so by this point will be completed -->

            <!-- set Shipment Shipped -->
            <service-call name="mantle.shipment.ShipmentServices.ship#Shipment"
                          in-map="[shipmentId:shipmentInfo.shipmentId]"/>


        </actions>
    </service>

    <!--service to create orderItemList-->
    <service verb="get" noun="OrderItemList">
        <in-parameters>
            <parameter name="orderId" required="true"/>
            <parameter name="itemList" type="List" required="true"/>
        </in-parameters>
        <out-parameters>
            <parameter name="orderItemList" type="List"/>
        </out-parameters>
        <actions>
            <set field="orderItemList" from="[]"/>
            <iterate list="itemList" entry="item">
                <entity-find entity-name="mantle.product.Product" list="productInfo">
                    <econdition field-name="pseudoId" from="item.SKU"/>
                </entity-find>
                <entity-find entity-name="mantle.order.OrderItem" list="orderItemInfoList">
                    <econdition field-name="orderId" from="orderId"/>
                    <econdition field-name="itemTypeEnumId" value="ItemProduct"/>
                    <econdition field-name="productId" from="productInfo[0].productId"/>
                    <select-field field-name="orderId,orderItemSeqId,productId,itemDescription,quantity,
                                    unitAmount,itemTypeEnumId"/>
                </entity-find>
                <if condition="orderItemInfoList.isEmpty()">
                    <return error="true" message="Can't find item in this orderId ${orderId}"/>
                </if>
                <script>
                    orderItemInfoList[0].quantity=item.quantity
                    orderItemList.add(orderItemInfoList[0])
                </script>
            </iterate>


        </actions>
    </service>
</services>
