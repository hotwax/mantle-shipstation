<?xml version="1.0" encoding="UTF-8"?>
<services xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://moqui.org/xsd/service-definition-2.1.xsd">
    <!--get#Data Service for getting XML data from screen-->
    <service verb="get" noun="OrderData">
        <in-parameters>
            <parameter name="start_date" type="Timestamp" format="MM/dd/yyyy HH:mm">
                <description>Find orders placed at or after this date.</description>
            </parameter>
            <parameter name="end_date" type="Timestamp" format="MM/dd/yyyy HH:mm">
                <description>Find orders placed at or before this date.</description>
            </parameter>
        </in-parameters>
        <actions>
                <set field="orderParts" from="[]"/>
                <script>
                    def response = ec.web.getResponse();
                    def context = ec.service.sync().name("co.hotwax.oms.OrderServices.find#Orders").parameters([statusId:'OrderApproved',placedDateStart:start_date,placedDateEnd:end_date]).call()
                    orderParts = context.orders
                    response.setContentType("application/xml")
                    Writer w = response.getWriter()
                    ec.resource.template("component://mantle-shipstation/screen/OrderData.xml.ftl",w)
                    w.flush()
                    w.close()
                </script>
        </actions>
    </service>

    <service verb="post" noun="ShipNotification">
        <in-parameters>
            <parameter name="orderId"/>
            <parameter name="tracking_number"/>
        </in-parameters>
        <actions>
            <!--<log message="+++++++++++${ec.web.getRequest()}+++++++++"/>-->
            <log message="+++++++++++${ec.web.getParameters()}+++++++++"/>
            <set field="tNo" from="tracking_number"/>
            <log message="+++++++++++${tNo}++++++${orderId}+++++"/>
            <set field="xmlData" from="ec.web.getRequestBodyText()"/>
            <log message="++++++++${xmlData}++++++++"/>
            <set field="itemList" from="[]"/>
            <script>

                def rootNode = new XmlParser().parseText(xmlData)

                System.out.println("++orderID++++${rootNode.'OrderID'}++++++")
                def orderID = rootNode.'OrderID'.text()
                def shipDate = rootNode.'ShipDate'.text()
                def ShippingCost = rootNode.'ShippingCost'.text()
                def Carrier = rootNode.'Carrier'.text()
                def trackingNo = rootNode.'TrackingNumber'.text()
                //rootNode.two.text() == 'Some text!'
                System.out.println("++Items++++${rootNode.'Items'}++++++")
                System.out.println("++++++Loop start+++++++")


                for (Node item in rootNode.'Items'.'Item') {


                    System.out.println("+++++++++++${item}++++++++++++++")
                    String sku = item.'SKU'.text()
                    String name = item.'Name'.text()
                    String quantity = item.'Quantity'.text()
                    String lineItemId = item.'LineItemID'.text()
                    itemList.add([SKU:sku,Name:name,Quantity:quantity,LineItemId:lineItemId])

                    System.out.println("sku:"+sku+" name:"+name+" quantity:"+quantity+" lineItemId:"+lineItemId)
                }
            </script>
            <log message="==itemList========${itemList}============="/>
            <!--<service-call name="update#mantle.order.OrderPart" in-map="[orderId:orderId,orderPartSeqId:'01',trackingNumber:tNo]"/>-->
            
            <entity-find-one entity-name="mantle.order.OrderHeaderAndPart" value-field="orderInfo">
                <field-map field-name="orderId" from="orderID"/>
            </entity-find-one>
            <log message="==order========${orderInfo}============="/>

            <set field="ShipmentInMap" from="[shipmentTypeEnumId:'ShpTpSales',statusId:'ShipShipped',fromPartyId:orderInfo.vendorPartyId,
            toPartyId:orderInfo.customerPartyId, estimatedShipDate:shipDate, estimatedShipCost:ShippingCost, costUomId:orderInfo.currencyUomId]"/>

            <set field="ShipmentRouteSegmentInMap" from="[shipmentId: ,shipmentRouteSegmentSeqId:'01', originFacilityId:orderInfo.facilityId
            , carrierPartyId:Carrier, shipmentMethodEnumId:orderInfo.shipmentMethodEnumId, statusId:'ShrssAccepted', masterTrackingCode:trackingNo]"/>

            <set field="ShipmentPackageInMap" from="[shipmentId: ]"/>


            <!--<mantle.shipment.ShipmentRouteSegment shipmentId="Fedex_Shipment" shipmentRouteSegmentSeqId="01"
                                                  shippingGatewayConfigId="FEDEX_INTEGRATION" originPostalContactMechId="Fedex_Origin_PA"
                                                  destPostalContactMechId="Fedex_Dest_PA" carrierPartyId="FedEx" shipmentMethodEnumId="ShMthSecondDay"
                                                  statusId="ShrssNotStarted"/>-->

           <!--<mantle.shipment.ShipmentPackage shipmentId="Fedex_Shipment" shipmentBoxTypeId="FedEx_Box_10kg" shipmentPackageSeqId="01"
                                             weight="100" weightUomId="WT_kg"/>
            <mantle.shipment.ShipmentPackageRouteSegment shipmentId="Fedex_Shipment" shipmentPackageSeqId="01" shipmentRouteSegmentSeqId="01"/>-->

            <!--<mantle.shipment.ShipmentItem shipmentId="Fedex_Shipment" productId="Fedex_Product" quantity="10"/>
            <mantle.shipment.ShipmentPackageContent shipmentId="Fedex_Shipment"  shipmentPackageSeqId="01" productId="Fedex_Product"
                                                    quantity="3"/>-->

            <log message="++++++ShipmentInMap+++++${ShipmentInMap}+++++++"/>

<!--            <service-call name="create#mantle.shipment.Shipment" in-map="ShipmentInMap" out-map="ShipmentResponse"/>-->
            
            
        </actions>
    </service>

</services>